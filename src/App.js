import React from 'react';

import './css/main.css';
import { Router, Route, Redirect } from './utils/router';
import Store from './redux/stores/main_store'
import * as Symbols from './utils/symbols'
import Auth from './utils/login_controller'
import { CookieTerms, CookieManager } from './utils/cookie'
import ErrorHandler from './utils/error'
import ContainerComponents from './menus/container'
import AccountInfo from './menus/accountinfo'
import { Tablist } from './menus/tabs'

/**
 * FUNction to get a random hash looking string of 32 characters.
 */
function getRandomHash() {
  let options = '1234567890abcdef';
  let result = '';
  for (let i = 0; i < 32; i++) {
    result += options[Math.floor(Math.random() * options.length)];
  }
  return result;
}

/**
 * Our main App (generated by default within React, but decided to keep using throughout)
 */
class App extends React.Component {
  /**
   * Do some basic initialization
   */
  constructor(props) {
    super(props);
    this.state = {
      loggedIn: Store.AuthStore.getState()[Symbols.AUTH_LOGGED_IN_KEY],
      hash: getRandomHash()
    };
    Store.AuthStore.subscribe(() => { this.setState({ loggedIn: Store.AuthStore.getState()[Symbols.AUTH_LOGGED_IN_KEY] }) });
  }
  /**
   * Once the App successfully mounts, we verify our session / login.
   */
  componentDidMount() {
    Auth.verifyLogin()
  }
  /**
   * Render our app (uses Routes and Redirects to ensure proper page and view is being shown)
   */
  render() {
    return (
      <Router>
        <div className="App">
          <Route path='/'>
            <Redirect condition={() => !('true' == CookieManager.getCookie('loggedIn', false))} url = '/login'/>
            <Redirect condition={() => ('true' == CookieManager.getCookie('loggedIn', false))} url = '/dashboard'/>
          </Route>
          <Route path='/dashboard'>
            <Redirect condition={() => !('true' == CookieManager.getCookie('loggedIn', false))} url = '/login'/>
            
            <ContainerComponents.ContainerList />
            <div className='sidebar'>
              <AccountInfo.AccountInfo />
            </div>
            <Tablist selected='containers' />
          </Route>
          <Route path='/dashboard/images'>
            <Redirect condition={() => !('true' == CookieManager.getCookie('loggedIn', false))} url = '/login'/>
            
            <ContainerComponents.ImageList />
            <div className='sidebar'>
              <AccountInfo.AccountInfo />
            </div>
            <Tablist selected='images' />
          </Route>
          <Route path='/dashboard/account'>
            <Redirect condition={() => !('true' == CookieManager.getCookie('loggedIn', false))} url = '/login'/>
            <Auth.AccountList />
            <div className='sidebar'>
              <AccountInfo.AccountInfo />
            </div>
            <Tablist selected='account' />
          </Route>
          <Route path='/login'>
            <Redirect condition={() => ('true' == CookieManager.getCookie('loggedIn', false))} url = '/'/>
            <Auth.LoginForm submit={function(form) {form.submitLogin()}} linebreak />
          </Route>
          <Route path='/hash'>
            <h1 onClick={() => this.setState({hash: getRandomHash()})}>{this.state.hash}</h1>
          </Route>
          <ErrorHandler />
        </div>
        <CookieTerms />
      </Router>
    );
  }
}

// Export as default.
export default App;
